function i(s,n=1){return new Promise((c,a)=>{var t=window.indexedDB;let e;const o=t.open(s,n);o.onsuccess=function(u){e=u.target.result,console.log("数据库打开成功"),c(e)},o.onerror=function(u){console.log("数据库打开报错")},o.onupgradeneeded=function(u){console.log("更新時"),console.log("onupgradeneeded"),e=u.target.result;var r;r=e.createObjectStore("orders",{keyPath:"id",autoIncrement:!0}),r.createIndex("id","id",{unique:!0}),r.createIndex("products","products",{unique:!1}),r.createIndex("user","user",{unique:!1}),r.createIndex("isPaid","isPaid",{unique:!1}),r.createIndex("finalTotal","finalTotal",{unique:!1})}})}function l(s,n,c){return new Promise((a,t)=>{var e=s.transaction([n],"readwrite").objectStore(n).add(c);e.onsuccess=function(){console.log("數據寫入成功"),a()},e.onerror=function(o){console.log("數據寫入失敗",o),t(o)}})}function d(s,n){return new Promise((c,a)=>{let t=[];var e=s.transaction(n,"readwrite").objectStore(n),o=e.openCursor();o.onsuccess=function(u){var r=u.target.result;r?(t.push(r.value),r.continue()):(console.log("游标读取的数据："),c(t))},o.onerror=function(u){a("读取数据失败："+u.target.error)}})}function f(s,n,c){return new Promise((a,t)=>{var e=s.transaction([n],"readwrite").objectStore(n).put(c);e.onsuccess=function(){console.log("數據寫入成功"),a()},e.onerror=function(o){console.log("數據寫入失敗",o),t(o)}})}export{l as a,d as c,i as o,f as u};
